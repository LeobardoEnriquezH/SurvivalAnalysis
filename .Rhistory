labs(x = TeX("$t$"), y = TeX("$S(t)$")) +
general_theme
library(dplyr)
library(ggplot2)
library(graphics)
S_example_3 <- tibble(x = c(0,6)) %>%
ggplot(aes(x = x)) +
annotate("segment", x = c(0,5,20,25,30), xend = c(5, 20, 25, 30,40),
y = 1-c(0, 1/3,5/12, 4/6, 5/6), yend = 1-c(0, 1/3,5/12, 4/6, 5/6)) +
#annotate("point", x = c(1, 2, 3,4), y = 1-c(0, 1/4, 1/2,3/4),
#         shape = 21, size = 3, color = "black", fill = "white") +
# annotate("point", x = c(1, 2, 3), y = 1-c(1/3, 2/3, 1),
#         shape = 19, size = 3, color = "black") +
theme(axis.line = element_line(arrow =arrow(type = "closed",
length = unit(0.1, "inches")))) +
scale_y_continuous(breaks = c(1/6, 2/6,1/2,4/6,5/6, 1),
labels = c(TeX("$\\frac{1}{6}$"),TeX("$\\frac{2}{6}$"), TeX("$\\frac{1}{2}$"),TeX("$\\frac{4}{6}$"),TeX("$\\frac{5}{6}$"), "1"), limits = c(0,1.2),
expand = expand_scale(mult = c(0,0))) +
scale_x_continuous(breaks = c(10, 20, 30,40),
labels = c(10, 20, 30,40),
expand = expand_scale(mult = c(0,0))) +
labs(x = TeX("$t$"), y = TeX("$S(t)$")) +
general_theme
library(dplyr)
library(ggplot2)
library(graphics)
library(dplyr)
library(ggplot2)
library(graphics)
S_example_3 <- tibble(x = c(0,6)) %>%
ggplot(aes(x = x)) +
annotate("segment", x = c(0,5,20,25,30), xend = c(5, 20, 25, 30,40),
y = 1-c(0, 1/3,5/12, 4/6, 5/6), yend = 1-c(0, 1/3,5/12, 4/6, 5/6)) +
#annotate("point", x = c(1, 2, 3,4), y = 1-c(0, 1/4, 1/2,3/4),
#         shape = 21, size = 3, color = "black", fill = "white") +
# annotate("point", x = c(1, 2, 3), y = 1-c(1/3, 2/3, 1),
#         shape = 19, size = 3, color = "black") +
theme(axis.line = element_line(arrow =arrow(type = "closed",
length = unit(0.1, "inches")))) +
scale_y_continuous(breaks = c(1/6, 2/6,1/2,4/6,5/6, 1),
labels = c(TeX("$\\frac{1}{6}$"),TeX("$\\frac{2}{6}$"), TeX("$\\frac{1}{2}$"),TeX("$\\frac{4}{6}$"),TeX("$\\frac{5}{6}$"), "1"), limits = c(0,1.2),
expand = expand_scale(mult = c(0,0))) +
scale_x_continuous(breaks = c(10, 20, 30,40),
labels = c(10, 20, 30,40),
expand = expand_scale(mult = c(0,0))) +
labs(x = TeX("$t$"), y = TeX("$S(t)$")) +
general_theme
library(dplyr)
library(ggplot2)
library(graphics)
library(latex2exp)
S_example_3 <- tibble(x = c(0,6)) %>%
ggplot(aes(x = x)) +
annotate("segment", x = c(0,5,20,25,30), xend = c(5, 20, 25, 30,40),
y = 1-c(0, 1/3,5/12, 4/6, 5/6), yend = 1-c(0, 1/3,5/12, 4/6, 5/6)) +
#annotate("point", x = c(1, 2, 3,4), y = 1-c(0, 1/4, 1/2,3/4),
#         shape = 21, size = 3, color = "black", fill = "white") +
# annotate("point", x = c(1, 2, 3), y = 1-c(1/3, 2/3, 1),
#         shape = 19, size = 3, color = "black") +
theme(axis.line = element_line(arrow =arrow(type = "closed",
length = unit(0.1, "inches")))) +
scale_y_continuous(breaks = c(1/6, 2/6,1/2,4/6,5/6, 1),
labels = c(TeX("$\\frac{1}{6}$"),TeX("$\\frac{2}{6}$"), TeX("$\\frac{1}{2}$"),TeX("$\\frac{4}{6}$"),TeX("$\\frac{5}{6}$"), "1"), limits = c(0,1.2),
expand = expand_scale(mult = c(0,0))) +
scale_x_continuous(breaks = c(10, 20, 30,40),
labels = c(10, 20, 30,40),
expand = expand_scale(mult = c(0,0))) +
labs(x = TeX("$t$"), y = TeX("$S(t)$")) +
general_theme
S_example_3 <- tibble(x = c(0,6)) %>%
ggplot(aes(x = x)) +
annotate("segment", x = c(0,5,20,25,30), xend = c(5, 20, 25, 30,40),
y = 1-c(0, 1/3,5/12, 4/6, 5/6), yend = 1-c(0, 1/3,5/12, 4/6, 5/6)) +
#annotate("point", x = c(1, 2, 3,4), y = 1-c(0, 1/4, 1/2,3/4),
#         shape = 21, size = 3, color = "black", fill = "white") +
# annotate("point", x = c(1, 2, 3), y = 1-c(1/3, 2/3, 1),
#         shape = 19, size = 3, color = "black") +
theme(axis.line = element_line(arrow =arrow(type = "closed",
length = unit(0.1, "inches")))) +
scale_y_continuous(breaks = c(1/6, 2/6,1/2,4/6,5/6, 1),
labels = c(TeX("$\\frac{1}{6}$"),TeX("$\\frac{2}{6}$"), TeX("$\\frac{1}{2}$"),TeX("$\\frac{4}{6}$"),TeX("$\\frac{5}{6}$"), "1"), limits = c(0,1.2),
expand = expansion(mult = c(0,0))) +
scale_x_continuous(breaks = c(10, 20, 30,40),
labels = c(10, 20, 30,40),
expand = expansion(mult = c(0,0))) +
labs(x = TeX("$t$"), y = TeX("$S(t)$")) +  general_theme
S_example_3 <- tibble(x = c(0,6)) %>%
ggplot(aes(x = x)) +
annotate("segment", x = c(0,5,20,25,30), xend = c(5, 20, 25, 30,40),
y = 1-c(0, 1/3,5/12, 4/6, 5/6), yend = 1-c(0, 1/3,5/12, 4/6, 5/6)) +
#annotate("point", x = c(1, 2, 3,4), y = 1-c(0, 1/4, 1/2,3/4),
#         shape = 21, size = 3, color = "black", fill = "white") +
# annotate("point", x = c(1, 2, 3), y = 1-c(1/3, 2/3, 1),
#         shape = 19, size = 3, color = "black") +
theme(axis.line = element_line(arrow =arrow(type = "closed",
length = unit(0.1, "inches")))) +
scale_y_continuous(breaks = c(1/6, 2/6,1/2,4/6,5/6, 1),
labels = c(TeX("$\\frac{1}{6}$"),TeX("$\\frac{2}{6}$"), TeX("$\\frac{1}{2}$"),TeX("$\\frac{4}{6}$"),TeX("$\\frac{5}{6}$"), "1"), limits = c(0,1.2),
expand = expansion(mult = c(0,0))) +
scale_x_continuous(breaks = c(10, 20, 30,40),
labels = c(10, 20, 30,40),
expand = expansion(mult = c(0,0))) +
labs(x = TeX("$t$"), y = TeX("$S(t)$")) +  theme_bw()
S_example_3
curve(1/(1-x)^2, from=1, to=50, , xlab="x", ylab="y")
curve(1/(1-x)^2, from=0, to=50, , xlab="x", ylab="y")
curve(e^(x-0.7(2^x-1)), from=0, to=50, , xlab="x", ylab="y")
curve(exp^(x-0.7(2^x-1)), from=0, to=50, , xlab="x", ylab="y")
curve(exp^{x-0.7(2^x-1)}, from=0, to=50, , xlab="x", ylab="y")
curve(exp^(x-0.7(2^x-1)), from=0, to=50, , xlab="x", ylab="y")
curve(e^(x-0.7(2^x-1)), from=0, to=50, , xlab="x", ylab="y")
curve(exp^(x-0.7*(2^x-1)), from=0, to=50, , xlab="x", ylab="y")
curve(exp^(x-0.7*(2^x-1)), from=0, to=50,  xlab="x", ylab="y")
curve(exp^(x-0.7*(2^x-1)), from=0, to=50,  xlab="x", ylab="y")
exp^(x-0.7*(2^x-1))
curve(1/(1-x)^2, from=0, to=50,  xlab="x", ylab="y")
curve(exp(x), from=0, to=50,  xlab="x", ylab="y")
curve(exp(x-0.7), from=0, to=50,  xlab="x", ylab="y")
curve(exp(x-0.7*(3)), from=0, to=50,  xlab="x", ylab="y")
curve(exp(x-0.7*(2-1)), from=0, to=50,  xlab="x", ylab="y")
curve(exp(x-0.7*(2^(2)-1)), from=0, to=50,  xlab="x", ylab="y")
curve(exp(x-0.7*(2^(x)-1)), from=0, to=50,  xlab="x", ylab="y")
curve(1/(1-x)^2, from=0, to=10,  xlab="x", ylab="y")
curve(exp(x-0.7*(2^(x)-1)), from=0, to=10,  xlab="x", ylab="y")
curve(1/(1-x)^2, from=0, to=10,  xlab="x", ylab="y")
curve(exp(x-0.7*(2^(x)-1)), from=0, to=10,  xlab="x", ylab="y")
curve(1/(1-x)^2, from=0, to=10,  xlab="x", ylab="y", main="a)")
curve(exp(x-0.7*(2^(x)-1)), from=0, to=10,  xlab="x", ylab="y", main="b)")
knitr::opts_chunk$set(echo = T, fig.width = 6, fig.height = 3.5)
rm(list = ls())
pacman::p_load(tidyverse,
kableExtra,
cowplot,
stargazer,knitr,viridis,dplyr,readr,scales,quantmod,texreg,tinytex,
tidyr, imager,lubridate,tseries, astsa, growthrates, tis, dynlm,
readxl, foreign, hrbthemes, gtsummary, corrplot, lm.beta, ggfortify,
AER, lmtest, sandwich,GGally, performance, flextable, see, qqplotr,
ggrepel, patchwork,boot, rempsyc, report,multcomp, car, broom)
data<-read.csv("train.csv")
datos <- subset(data, select = -c(id, CustomerId, Surname))
View(datos)
sum(is.na(datos$CreditScore))
NA_CreditScore<-sum(is.na(datos$CreditScore))
NA_Geography<-sum(is.na(datos$Geography))
NA_Gender<-sum(is.na(datos$Gender))
NA_Age<-sum(is.na(datos$Age))
NA_Tenure<-sum(is.na(datos$Tenure))
NA_Balance<-sum(is.na(datos$Balance))
NA_NumOfProducts<-sum(is.na(datos$NumOfProducts))
NA_HasCrCard<-sum(is.na(datos$HasCrCard))
NA_IsActiveMember<-sum(is.na(datos$IsActiveMember))
NA_EstimatedSalary<-sum(is.na(datos$EstimatedSalary))
NA_Exited<-sum(is.na(datos$Exited))
# Escalas
tipo <- sapply(datos, class)
continuas <-  which(tipo == "numeric") # continuas
enteras <- which(tipo == "integer") # enteras
numericas <- names(c(continuas,enteras))
# Variables Categóricas
nominales <- which( tipo == "factor") # categóricas
ordinales <- which( sapply(datos, is.ordered) )  # ordinales
fecha <- which(tipo == "Date") # Fecha
categoricas <- names(c(nominales, ordinales, fecha))
# Establecimiendo de escalas ordinales
datos$NumOfProducts <- factor(datos$NumOfProducts, levels= c("1","2","3","4"), order=TRUE)
# Establecimiendo de variables tipo factor no ordinal
datos$Geography <- factor(datos$Geography)
# Establecimiendo de variables tipo factor no ordinal
datos$Geography <- factor(datos$Geography)
datos$Gender <- factor(datos$Gender)
datos$HasCrCard <- factor(datos$HasCrCard)
datos$IsActiveMember <- factor(datos$IsActiveMember)
datos$Exited <- factor(datos$Exited)
knitr::opts_chunk$set(echo = T, fig.width = 6, fig.height = 3.5)
rm(list = ls())
pacman::p_load(tidyverse,
kableExtra,
cowplot,
stargazer,knitr,viridis,dplyr,readr,scales,quantmod,texreg,tinytex,
tidyr, imager,lubridate,tseries, astsa, growthrates, tis, dynlm,
readxl, foreign, hrbthemes, gtsummary, corrplot, lm.beta, ggfortify,
AER, lmtest, sandwich,GGally, performance, flextable, see, qqplotr,
ggrepel, patchwork,boot, rempsyc, report,multcomp, car, broom)
data<-read.csv("train.csv")
datos <- subset(data, select = -c(id, CustomerId, Surname))
NA_CreditScore<-sum(is.na(datos$CreditScore))
NA_Geography<-sum(is.na(datos$Geography))
NA_Gender<-sum(is.na(datos$Gender))
NA_Age<-sum(is.na(datos$Age))
NA_Tenure<-sum(is.na(datos$Tenure))
NA_Balance<-sum(is.na(datos$Balance))
NA_NumOfProducts<-sum(is.na(datos$NumOfProducts))
NA_HasCrCard<-sum(is.na(datos$HasCrCard))
NA_IsActiveMember<-sum(is.na(datos$IsActiveMember))
NA_EstimatedSalary<-sum(is.na(datos$EstimatedSalary))
NA_Exited<-sum(is.na(datos$Exited))
# Establecimiendo de escalas ordinales
datos$NumOfProducts <- factor(datos$NumOfProducts, levels= c("1","2","3","4"), order=TRUE)
# Establecimiendo de variables tipo factor no ordinal
datos$Geography <- factor(datos$Geography)
datos$Gender <- factor(datos$Gender)
datos$HasCrCard <- factor(datos$HasCrCard)
datos$IsActiveMember <- factor(datos$IsActiveMember)
datos$Exited <- factor(datos$Exited)
# Escalas
tipo <- sapply(datos, class)
continuas <-  which(tipo == "numeric") # continuas
enteras <- which(tipo == "integer") # enteras
numericas <- names(c(continuas,enteras))
# Variables Categóricas
nominales <- which( tipo == "factor") # categóricas
ordinales <- which( sapply(datos, is.ordered) )  # ordinales
fecha <- which(tipo == "Date") # Fecha
categoricas <- names(c(nominales, ordinales, fecha))
View(tipo)
stargazer(datos[,numericas])
View(datos)
# Histogramas
par(mfrow= c(2,2) )
multi.hist(datos[, numericas])
source("funciones.R")
# Histogramas
par(mfrow= c(2,2) )
multi.hist(datos[, numericas])
# Histogramas
par(mfrow= c(1,2) )
multi.hist(datos[, numericas])
# Histogramas
par(mfrow= c(1,2) )
multi.hist(datos[, categoricas])
# Histogramas
boxplot(datos$Geography, horizontal = TRUE, axes = F, border = "black",
lwd = 2, col = rgb(0, 1, 1, alpha = 0.15), cex=0.4)
# Histogramas
boxplot(datos$Geography)
# Histogramas
hist(datos$Geography)
# Histogramas
boxplot(datos$Geography)
# Histogramas
boxplot.matrix(datos[,categoricas])
# Histogramas
boxplot(datos$Gender, datos$CreditScore)
# Histogramas
boxplot(datos$Gender, datos$CreditScore)
# Histogramas
hist(datos$Gender, datos$CreditScore)
# Histogramas
hist(datos$Gender)
# Histogramas
hist(CreditScore, by=Genger, data=datos)
# Histogramas
hist(CreditScore, by=Genger, data=datos)
ggplot(data = datos, aes(x = Gender, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Genero", y = "Número observaciones")+
ggtitle("Frecuencia absoluta observaciones por género")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
genero = datos %>% group_by(Genero)%>% summarise(n = n())
genero = datos %>% group_by(Gender)%>% summarise(n = n())
View(genero)
View(genero)
ggplot(data = genero, aes(x = Gender, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Genero", y = "Número observaciones")+
ggtitle("Frecuencia absoluta observaciones por género")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
genero = datos %>% group_by(Gender)%>% summarise(n = n())
ggplot(data = genero, aes(x = Gender, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Genero", y = "Número observaciones")+
ggtitle("Frecuencia absoluta observaciones por género")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
par(mfrow= c(1,2) )
genero = datos %>% group_by(Gender)%>% summarise(n = n())
ggplot(data = genero, aes(x = Gender, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Genero", y = "Número observaciones")+
ggtitle("Frecuencia absoluta observaciones por género")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
geography = datos %>% group_by(Geography)%>% summarise(n = n())
ggplot(data = geography, aes(x = Geography, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Geografia", y = "Número observaciones")+
ggtitle("Frecuencia absoluta observaciones por geografía")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
par(mfrow= c(1,2))
genero = datos %>% group_by(Gender)%>% summarise(n = n())
ggplot(data = genero, aes(x = Gender, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Genero", y = "Número observaciones")+
ggtitle("Frecuencia absoluta observaciones por género")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
geography = datos %>% group_by(Geography)%>% summarise(n = n())
ggplot(data = geography, aes(x = Geography, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Geografia", y = "Número observaciones")+
ggtitle("Frecuencia absoluta observaciones por geografía")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
par(mfrow= c(1,2))
plot1<-genero = datos %>% group_by(Gender)%>% summarise(n = n())
par(mfrow= c(1,2))
genero = datos %>% group_by(Gender)%>% summarise(n = n())
plot1<-ggplot(data = genero, aes(x = Gender, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Genero", y = "Número observaciones")+
ggtitle("Frecuencia absoluta observaciones por género")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
geography = datos %>% group_by(Geography)%>% summarise(n = n())
plot2<-ggplot(data = geography, aes(x = Geography, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Geografia", y = "Número observaciones")+
ggtitle("Frecuencia absoluta observaciones por geografía")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
grid.arrange(plot1, plot2, ncol=2)
par(mfrow= c(1,2))
genero = datos %>% group_by(Gender)%>% summarise(n = n())
plot1<-ggplot(data = genero, aes(x = Gender, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Genero", y = "Número observaciones")+
ggtitle("Frecuencia absoluta observaciones por género")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
geography = datos %>% group_by(Geography)%>% summarise(n = n())
plot2<-ggplot(data = geography, aes(x = Geography, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Geografia", y = "Número observaciones")+
ggtitle("Frecuencia absoluta observaciones por geografía")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
plot_grid(plot1, plot2, ncol=2)
par(mfrow= c(1,2))
genero = datos %>% group_by(Gender)%>% summarise(n = n())
plot1<-ggplot(data = genero, aes(x = Gender, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Genero", y = "Número observaciones")+
ggtitle(" ")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
geography = datos %>% group_by(Geography)%>% summarise(n = n())
plot2<-ggplot(data = geography, aes(x = Geography, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Geografia", y = "Número observaciones")+
ggtitle(" ")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
plot_grid(plot1, plot2, ncol=2)
par(mfrow= c(1,2))
NumOfProducts = datos %>% group_by(NumOfProducts)%>% summarise(n = n())
plot1<-ggplot(data = NumOfProducts, aes(x = NumOfProducts, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Numero de productos", y = "Número observaciones")+
ggtitle(" ")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
HasCrCard = datos %>% group_by(HasCrCard)%>% summarise(n = n())
plot2<-ggplot(data = HasCrCard, aes(x = HasCrCard, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Si tiene tarjeta de Cr", y = "Número observaciones")+
ggtitle(" ")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
plot_grid(plot1, plot2, ncol=2)
par(mfrow= c(1,2))
NumOfProducts = datos %>% group_by(NumOfProducts)%>% summarise(n = n())
plot1<-ggplot(data = NumOfProducts, aes(x = NumOfProducts, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Numero de productos", y = "Número observaciones")+
ggtitle(" ")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
HasCrCard = datos %>% group_by(HasCrCard)%>% summarise(n = n())
plot2<-ggplot(data = HasCrCard, aes(x = HasCrCard, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Si tiene tarjeta", y = "Número observaciones")+
ggtitle(" ")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
plot_grid(plot1, plot2, ncol=2)
par(mfrow= c(1,2))
genero = datos %>% group_by(Gender)%>% summarise(n = n())
plot1<-ggplot(data = genero, aes(x = Gender, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Genero", y = "Número observaciones")+
ggtitle(" ")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
geography = datos %>% group_by(Geography)%>% summarise(n = n())
plot2<-ggplot(data = geography, aes(x = Geography, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Geografia", y = "Número observaciones")+
ggtitle(" ")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
NumOfProducts = datos %>% group_by(NumOfProducts)%>% summarise(n = n())
plot3<-ggplot(data = NumOfProducts, aes(x = NumOfProducts, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Numero de productos", y = "Número observaciones")+
ggtitle(" ")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
HasCrCard = datos %>% group_by(HasCrCard)%>% summarise(n = n())
plot3<-ggplot(data = HasCrCard, aes(x = HasCrCard, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Si tiene tarjeta", y = "Número observaciones")+
ggtitle(" ")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
plot_grid(plot1, plot2, plot3, plot4, ncol=2)
par(mfrow= c(1,2))
genero = datos %>% group_by(Gender)%>% summarise(n = n())
plot1<-ggplot(data = genero, aes(x = Gender, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Genero", y = "Número observaciones")+
ggtitle(" ")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
geography = datos %>% group_by(Geography)%>% summarise(n = n())
plot2<-ggplot(data = geography, aes(x = Geography, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Geografia", y = "Número observaciones")+
ggtitle(" ")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
NumOfProducts = datos %>% group_by(NumOfProducts)%>% summarise(n = n())
plot3<-ggplot(data = NumOfProducts, aes(x = NumOfProducts, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Numero de productos", y = "Número observaciones")+
ggtitle(" ")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
HasCrCard = datos %>% group_by(HasCrCard)%>% summarise(n = n())
plot4<-ggplot(data = HasCrCard, aes(x = HasCrCard, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Si tiene tarjeta", y = "Número observaciones")+
ggtitle(" ")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
plot_grid(plot1, plot2, plot3, plot4, ncol=2)
genero = datos %>% group_by(Gender)%>% summarise(n = n())
plot1<-ggplot(data = genero, aes(x = Gender, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Genero", y = "Número observaciones")+
ggtitle(" ")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
geography = datos %>% group_by(Geography)%>% summarise(n = n())
plot2<-ggplot(data = geography, aes(x = Geography, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Geografia", y = "Número observaciones")+
ggtitle(" ")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
NumOfProducts = datos %>% group_by(NumOfProducts)%>% summarise(n = n())
plot3<-ggplot(data = NumOfProducts, aes(x = NumOfProducts, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Numero de productos", y = "Número observaciones")+
ggtitle(" ")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
HasCrCard = datos %>% group_by(HasCrCard)%>% summarise(n = n())
plot4<-ggplot(data = HasCrCard, aes(x = HasCrCard, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Si tiene tarjeta", y = "Número observaciones")+
ggtitle(" ")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
plot_grid(plot1, plot2, plot3, plot4, ncol=2)
IsActiveMember = datos %>% group_by(IsActiveMember )%>% summarise(n = n())
plot1<-ggplot(data = IsActiveMember, aes(x = NIsActiveMember, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Es miembro activo", y = "Número observaciones")+
ggtitle(" ")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
Exited= datos %>% group_by(Exited)%>% summarise(n = n())
plot2<-ggplot(data = Exited, aes(x = Exited, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Si salió", y = "Número observaciones")+
ggtitle(" ")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
plot_grid(plot1, plot2, ncol=2)
IsActiveMember = datos %>% group_by(IsActiveMember )%>% summarise(n = n())
plot1<-ggplot(data = IsActiveMember, aes(x = IsActiveMember, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Es miembro activo", y = "Número observaciones")+
ggtitle(" ")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
Exited= datos %>% group_by(Exited)%>% summarise(n = n())
plot2<-ggplot(data = Exited, aes(x = Exited, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Si salió", y = "Número observaciones")+
ggtitle(" ")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
plot_grid(plot1, plot2, ncol=2)
genero = datos %>% group_by(Gender)%>% summarise(n = n())
plot1<-ggplot(data = genero, aes(x = Gender, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Genero", y = " ")+
ggtitle(" ")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
geography = datos %>% group_by(Geography)%>% summarise(n = n())
plot2<-ggplot(data = geography, aes(x = Geography, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Geografia", y = " ")+
ggtitle(" ")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
NumOfProducts = datos %>% group_by(NumOfProducts)%>% summarise(n = n())
plot3<-ggplot(data = NumOfProducts, aes(x = NumOfProducts, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Numero de productos", y = " ")+
ggtitle(" ")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
HasCrCard = datos %>% group_by(HasCrCard)%>% summarise(n = n())
plot4<-ggplot(data = HasCrCard, aes(x = HasCrCard, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Si tiene tarjeta", y = " ")+
ggtitle(" ")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
plot_grid(plot1, plot2, plot3, plot4, ncol=2)
IsActiveMember = datos %>% group_by(IsActiveMember )%>% summarise(n = n())
plot1<-ggplot(data = IsActiveMember, aes(x = IsActiveMember, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Es miembro activo", y = " ")+
ggtitle(" ")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
Exited= datos %>% group_by(Exited)%>% summarise(n = n())
plot2<-ggplot(data = Exited, aes(x = Exited, y = n))+
geom_bar(stat = "identity", fill = "royalblue4")+
labs(x = "Si salió", y = " ")+
ggtitle(" ")+theme_bw()+
theme(axis.text.x = element_text(angle=90))
plot_grid(plot1, plot2, ncol=2)
